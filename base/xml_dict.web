
@* [F] XML Dictionary.
We have several types declared in the \texttt{xml\_dict.pas} file.
These are enumerated types, and string constants for their names.

\label{XMLDictionary}

@<\texttt{xml\_dict.pas}@>=
  @<GNU License@>

unit xml_dict;

interface @|@#

uses mobjects; @|@#

@t\4\4@> {known (and only allowed) \XML/ elements}
type @<Types of \texttt{xml\_dict.pas}@>@;

const @<Constants of \texttt{xml\_dict.pas}@>@;

implementation @t\2@> @|@/

end.

@ @<Types of \texttt{xml\_dict.pas}@>=
   XMLElemKind =
   (
    elUnknown,
    elAdjective,
    elAdjectiveCluster,
    elArticleID,
    elAncestors,
    elArguments,
    elBlock,
    elConditions,
    elCorrectnessConditions,
    elDefiniens,
    elDirective,
    elEnviron,
    elEquality,
    elFieldSegment,
    elFormat,
    elFormats,
    elIdent,
    elItem,
    elIterativeStep,
    elLabel,
    elLink,
    elLoci,
    elLociEquality,
    elLocus,
    elNegatedAdjective,
    elPartialDefiniens,
    elPriority,
    elProposition,
    elProvisionalFormulas,
    elRedefine,
    elRightCircumflexSymbol,
    elSchematicVariables,
    elScheme,
    elSelector,
    elSetMember,
    elSkippedProof,
    elSymbol,
    elSymbolCount,
    elSymbols,
    elSubstitution,
    elTypeSpecification,
    elTypeList,
    elVariable,
    elVariables,
    elVocabularies,
    elVocabulary
    );

@ @<Constants of \texttt{xml\_dict.pas}@>=
   XMLElemName: array[XMLElemKind] of string =
   (
    'Unknown',
    'Adjective',
    'Adjective-Cluster',
    'ArticleID',
    'Ancestors',
    'Arguments',
    'Block',
    'Conditions',
    'CorrectnessConditions',
    'Definiens',
    'Directive',
    'Environ',
    'Equality',
    'Field-Segment',
    'Format',
    'Formats',
    'Ident',
    'Item',
    'Iterative-Step',
    'Label',
    'Link',
    'Loci',
    'LociEquality',
    'Locus',
    'NegatedAdjective',
    'Partial-Definiens',
    'Priority',
    'Proposition',
    'Provisional-Formulas',
    'Redefine',
    'Right-Circumflex-Symbol',
    'Schematic-Variables',
    'Scheme',
    'Selector',
    'SetMember',
    'elSkippedProof',
    'Symbol',
    'SymbolCount',
    'Symbols',
    'Substitution',
    'Type-Specification',
    'Type-List',
    'Variable',
    'Variables',
    'Vocabularies',
    'Vocabulary'
    );

@ Note that \\{atX1} and \\{atX2} are not used anywhere in Mizar,
but \\{atY1} and \\{atY2} are used in the \texttt{first\_identification.pas}.
@<Types of \texttt{xml\_dict.pas}@>=
@t\4\4@> {known \XML/ attributes}
   XMLAttrKind =
   (
    atUnknown,
    atAid,
    atArgNr,
    atArticleId,
    atArticleExt,
    atCol,
    atCondition,
    atConstrNr,
    atIdNr,
    atInfinitive,
    atKind,
    atLabelNr,
    atLeftArgNr,
    atLine,
    atMizfiles,
    atName,
    atNegated,
    atNr,
    atNumber,
    atOrigin,
    atPosLine,
    atPosCol,
    atPriority,
    atProperty,
    atRightSymbolNr,
    atSchNr,
    atSerialNr,
    atShape,
    atSpelling,
    atSymbolNr,
    atValue,
    atVarNr,
    atVarSort,
    atX,
    atX1, {unused}
    atX2, {unused}
    atY,
    atY1,
    atY2
    );

@ @<Constants of \texttt{xml\_dict.pas}@>=
XMLAttrName:array[XMLAttrKind] of string =
   (
    'unknown',
    'aid',
    'argnr',
    'articleid',
    'articleext',
    'col',
    'condition',
    'constrnr',
    'idnr',
    'infinitive',
    'kind',
    'labelnr',
    'leftargnr',
    'line',
    'mizfiles',
    'name',
    'negated',
    'nr',
    'number',
    'origin',
    'posline',
    'poscol',
    'priority',
    'property',
    'rightsymbolnr',
    'schnr',
    'serialnr',
    'shape',
    'spelling',
    'symbolnr',
    'value',
    'varnr',
    'varsort',
    'x',
    'x1',
    'x2',
    'y',
    'y1',
    'y2'
    );
